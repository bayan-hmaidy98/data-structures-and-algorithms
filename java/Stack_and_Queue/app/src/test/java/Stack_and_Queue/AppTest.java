/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Stack_and_Queue.app.src.test.java.Stack_and_Queue;

import Stack_and_Queue.app.src.main.java.Stack_and_Queue.Queue;
import Stack_and_Queue.app.src.main.java.Stack_and_Queue.Stack;
import org.junit.Assert;
import org.junit.jupiter.api.Test;

class AppTest {
    @Test void stackTest() {
//        App classUnderTest = new App();
      Stack stack1 = new Stack();
      Stack stack2 = new Stack();
      stack1.push(3);
      stack1.push(4);
      stack1.push(7);
      String expected = " { 7 }  ->  { 4 }  ->  { 3 }  -> { NULL }";
      Assert.assertEquals(expected, stack1.toString());
      stack1.pop();
      String expected1 = " { 4 }  ->  { 3 }  -> { NULL }";
      Assert.assertEquals(expected1, stack1.toString());
      Assert.assertEquals("There's no Top" , stack2.peek());
      Assert.assertEquals(4, stack1.peek());
      Assert.assertEquals("true", stack2.isEmpty().toString());
      Assert.assertEquals("false", stack1.isEmpty().toString());
//      System.out.println(stack1.toString());
    }

    @Test void queueTest(){
      Queue queue1 = new Queue();
      Queue queue2 = new Queue();
      queue1.enQueue(5);
      queue1.enQueue(7);
      queue1.enQueue(3);
      queue1.enQueue(10);
      System.out.println(queue1.toString());
      Assert.assertEquals(" { 5 }  ->  { 7 }  ->  { 3 }  ->  { 10 }  -> { NULL }", queue1.toString());
      queue1.deQueue();
      Assert.assertEquals(" { 7 }  ->  { 3 }  ->  { 10 }  -> { NULL }", queue1.toString());
      Assert.assertEquals("Queue is empty" , queue2.peek());
      Assert.assertEquals(7, queue1.peek());
      Assert.assertEquals("true", queue2.isEmpty().toString());
      Assert.assertEquals("false", queue1.isEmpty().toString());
    }
}
